<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring Schema -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx"

	xmlns:mongo="http://www.springframework.org/schema/data/mongo"    
		
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	
	http://www.springframework.org/schema/data/mongo     
          http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd  ">

	<mongo:mongo host="localhost" port="27017"/>  

	 <mongo:db-factory dbname="BookStore" mongo-ref="mongo"/> 
	  
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">  
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>  
     </bean>
     
     <bean id="InfoMongoDao" class="dao.impl.InfoDaoImpl">
     	<property name="mongoTemplate" ref="mongoTemplate" />
     	<property name="collectionName" value="Bookstore" />
     </bean>
     
	<!-- Bean -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3306/BookStore" p:user="root"
		p:password="123456" p:maxPoolSize="40" p:minPoolSize="1"
		p:initialPoolSize="1" p:maxIdleTime="20" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="mappingResources">
			<list>
				<value>model/Book.hbm.xml</value>
				<value>model/Order.hbm.xml</value>
				<value>model/Orderitem.hbm.xml</value>
				<value>model/Buyer.hbm.xml</value>
				<value>model/Cart.hbm.xml</value>
				<value>model/Statics.hbm.xml</value>
			</list>
		</property>
		<!-- Hibernate SessionFactory -->
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
			</value>
		</property>
	</bean>

	<!-- DAO Bean -->
	<bean id="bookDao" class="dao.impl.BookDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="orderDao" class="dao.impl.OrderDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="orderitemDao" class="dao.impl.OrderitemDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="userDao" class="dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="cartDao" class="dao.impl.CartDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="staticsDao" class="dao.impl.StaticsDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="addressDao" class="dao.impl.AddressDaoImpl">
		<property name="mongoTemplate" ref="mongoTemplate" />
	</bean>
	<bean id="fileDao" class="dao.impl.FileDaoImpl">
		<property name="mongoTemplate" ref="mongoTemplate" />
	</bean>

	<!-- Service -->
	
	<bean id="bookService" class="service.impl.BookServiceImpl">
		<property name="bookDao" ref="bookDao"></property>
	</bean>
	
	<bean id="orderitemService" class="service.impl.OrderitemServiceImpl">
		<property name="orderitemDao" ref="orderitemDao"></property>
		<property name="bookService" ref="bookService"></property>
	</bean>
	
	<bean id="cartService" class="service.impl.CartServiceImpl">
		<property name="cartDao" ref="cartDao"></property>
		<property name="bookService" ref="bookService"></property>
	</bean>
	
	<bean id="userService" class="service.impl.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
		<property name="addressDao" ref="addressDao"></property>
		<property name="mongoTemplate" ref="mongoTemplate"></property>
		<property name="fileDao" ref="fileDao"></property>
	</bean>
	
	<bean id="staticsService" class="service.impl.StaticsServiceImpl">
		<property name="staticsDao" ref="staticsDao"></property>
	</bean>
	
	<bean id="orderService" class="service.impl.OrderServiceImpl">
		<property name="orderDao" ref="orderDao"></property>
		<property name="cartDao" ref="cartDao"></property>
		<property name="bookDao" ref="bookDao"></property>
		<property name="orderitemDao" ref="orderitemDao"></property>
		<property name="bookService" ref="bookService"></property>
		<property name="cartService" ref="cartService"></property>
		<property name="orderitemService" ref="orderitemService"></property>
		<property name="userService" ref="userService"></property>
	</bean>

	<!-- HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="bookPointcut" expression="bean(bookService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bookPointcut" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="cartPointcut" expression="bean(cartService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="cartPointcut" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="orderPointcut" expression="bean(orderService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="orderPointcut" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="orderitemPointcut" expression="bean(orderitemService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="orderitemPointcut" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="userPointcut" expression="bean(userService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="userPointcut" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="staticsPointcut" expression="bean(staticsService)" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="staticsPointcut" />
	</aop:config>
	
</beans>